@page "/"
@using Adapter.Interfaces
@using WebApp.Models
@inject ApplicationDbContext Context
@inject ISnackbar Snackbar
@inject IAdapter Adapter
@rendermode InteractiveServer

<MudGrid>
    <MudItem md="6">
        <MudPaper Elevation="1" Class="pa-4">
            <MudText Typo="Typo.h5" Class="d-flex align-center justify-center">
                Správa Adaptéru
            </MudText>
            
            <MudDivider Style="margin-top: 5px;margin-bottom: 25px"/>
            
            <MudButton FullWidth="true" Variant="Variant.Filled" Color="Color.Primary" OnClick="OnClickAdapterRunAsync">Spustit Adaptér</MudButton>
        </MudPaper>
    </MudItem>
    <MudItem md="6">
        <MudPaper Elevation="1" Class="pa-4">
            <MudText Typo="Typo.h5" Class="d-flex align-center justify-center">
                Přehled predikcí studentů
            </MudText>
            
            <MudDivider Style="margin-top: 5px;margin-bottom: 25px"/>
            <MudGrid>
                @if (_studentPredictions.Any(_ => !string.IsNullOrWhiteSpace(_.PredictedLabel)))
                {
                    @foreach (var studentPrediction in _studentPredictions)
                    {
                        <MudItem md="6"><MudText Typo="Typo.body1" Class="d-flex align-center justify-center">StudentId: <b>@studentPrediction.StudentId</b></MudText></MudItem>
                        <MudItem md="6"><MudText Typo="Typo.body1" Class="d-flex align-center justify-center">Predicted Label: <b>@studentPrediction.PredictedLabel</b></MudText></MudItem>
                    }
                }
                else
                {
                    <MudItem md="12">
                        <MudText Typo="Typo.h6" Class="d-flex align-center justify-center">
                            Neexistují žádné predikce
                        </MudText>
                    </MudItem>
                }
            </MudGrid>
            <MudButton Disabled="_isTaskRunning" OnClick="OnClickAdapterRunAsync"></MudButton>
        </MudPaper>
    </MudItem>
</MudGrid>

<MudOverlay Visible="_isTaskRunning">
    <MudProgressCircular Size="Size.Large" Indeterminate="true" Color="Color.Primary" />
</MudOverlay>

@code {
    private bool _isTaskRunning;

    private List<StudentPredictionItem> _studentPredictions = [];

    protected override async Task OnInitializedAsync()
    {
        _studentPredictions = await Context.Students
            .Select(_ => new StudentPredictionItem
            {
                StudentId = _.StudentId,
                PredictedLabel = _.PredictedLabel.Label
            })
            .OrderBy(_ => _.StudentId)
            .ToListAsync();
    }


    private async Task OnClickAdapterRunAsync()
    {
        try
        {
            _isTaskRunning = true;

            await Adapter.ProcessAsync();
            
            Snackbar.Add("Adaptér spuštěn", Severity.Success);
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Nastal problém - {ex.Message}", Severity.Error);
        }
        finally
        {
            _isTaskRunning = false;
        }
    }
}

